; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


; Global Environmental Variables
;   These values are inherited by all the other settings by default
[env]
src_filter = -<.git/> -<.svn/> -<example/> -<examples/> -<test/>
; Moving from gnu++17 to gnu++11 removes a warning caused by the keyword
; register which was added in the C++17 standard.
; If using C++17 is important this flag can also be used to replace the keyword
; with nothing. In the new standard, the register keyword is ignored anyway.
;build_flags = -Dregister=
build_unflags =
    -std=gnu++17
build_flags =
    -std=gnu++11
lib_deps =
    Wire
    SPI
    SoftwareSerial
    teemuatlut/TMCStepper
    https://github.com/waspinator/AccelStepper
    robtillaart/RunningMedian
    PowerBroker2/SerialTransfer
    https://github.com/FastLED/FastLED

; Uno
;platform = atmelavr
;board = uno
;framework = arduino

; 16Mhz Atmega3328P
platform = atmelavr
framework = arduino
board = ATmega328P
board_build.mcu = atmega328p
board_build.f_cpu = 16000000L
upload_speed = 115200
monitor_speed = 115200

; 8Mhz Atmega3328P
;platform = atmelavr
;framework = arduino
;board = ATmega328P
;board_build.f_cpu 	= 8000000L
;board_hardware.oscillator = internal
;upload_speed 		= 38400
;monitor_speed 		= 38400

; Flower programs

[env:flower_basic]
src_filter = ${env.src_filter} +<flower_basic/>

[env:flower_lights]
src_filter = ${env.src_filter} +<flower_lights/>

[env:flower_emotional_standalone]
src_filter = ${env.src_filter} +<flower_emotional_standalone/>

[env:flower_peripheral]
src_filter = ${env.src_filter} +<flower_peripheral/>

[env:flower_choreography]
src_filter = ${env.src_filter} +<flower_choreography/>

[env:flower_excited_standalone]
src_filter = ${env.src_filter} +<flower_excited_standalone/>

[env:serial_to_i2c]
src_filter = ${env.src_filter} +<serial_to_i2c/>

; Testing programs

[env:neo_pixel]
src_filter = ${env.src_filter} +<testing/neo_pixel/>

[env:personality_lighting]
src_filter = ${env.src_filter} +<testing/personality_lighting/>

[env:voltage_sensor]
src_filter = ${env.src_filter} +<testing/voltage_sensor/>

[env:mux_dip_switch]
src_filter = ${env.src_filter} +<testing/dip_mux/>

[env:stall_guard_tuning_flower]
src_filter = ${env.src_filter} +<testing/stall_guard_tuning/flower_tuning>

[env:stall_guard_tuning_tmc2130]
src_filter = ${env.src_filter} +<testing/stall_guard_tuning/tmc2130_basic>

[env:controller]
src_filter = ${env.src_filter} +<testing/controller/>

[env:tmc2130]
src_filter = ${env.src_filter} +<testing/tmc2130/>

[env:tmc2209]
src_filter = ${env.src_filter} +<testing/tmc2209/>

[env:i2c_controller]
src_filter = ${env.src_filter} +<testing/i2c_controller/>

[env:i2c_peripheral]
src_filter = ${env.src_filter} +<testing/i2c_peripheral/>

[env:led_indicator]
src_filter = ${env.src_filter} +<testing/led_indicator/>
